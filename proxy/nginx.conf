# daemon off;

load_module modules/ngx_http_js_module.so;
load_module modules/ngx_http_geoip2_module.so;

events {
    worker_connections 1024;
}

http {
        geoip2 /etc/dbip-city-lite.mmdb {
                $geoip2_city_build_epoch metadata build_epoch;
                $geoip2_is_in_european_union default=false source=$remote_addr country is_in_european_union;
                $geoip2_country_code source=$remote_addr country iso_code;
                $geoip2_country_name source=$remote_addr country names en;
                $geoip2_state_name source=$remote_addr subdivisions names en;
                $geoip2_city_name source=$remote_addr city names en;
        }

        js_include mask-ip.js;
        js_set     $remote_addr_masked maskRemoteAddress;

	server {
		listen 80;
		server_name localhost;

		location / {
                        proxy_pass http://web:3000;
                        proxy_set_header X-Forwarded-For $remote_addr_masked;
                        proxy_set_header X-GeoIP-COUNTRY_CODE $geoip2_country_code;
                        proxy_set_header X-GeoIP-COUNTRY_NAME $geoip2_country_name;
                        proxy_set_header X-GeoIP-CITY_NAME    $geoip2_city_name;
                        proxy_set_header X-GeoIP-city_build_epoch $geoip2_city_build_epoch;
                        proxy_set_header X-GeoIP-is_in_european_union $geoip2_is_in_european_union;

                        proxy_set_header Accept-Encoding "";
                        sub_filter </footer> '<div><a href="https://db-ip.com">IP Geolocation by DB-IP</a></div></footer>';
                        sub_filter_once on;
		}

                location = /favicon.ico {
                        rewrite . /static/favicon.ico;
                }

		location /static {
                        rewrite /static/(.*) /$1 break;
                        proxy_pass http://backend1;
                        proxy_redirect off;
                        proxy_set_header Host $host;
                        proxy_set_header X-Forwarded-For $remote_addr_masked;
		}
	}
}
